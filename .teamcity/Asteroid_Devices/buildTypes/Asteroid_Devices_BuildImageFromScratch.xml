<?xml version="1.0" encoding="UTF-8"?>
<template xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="3c0c1327-e0ae-418d-a455-10419d784582" xsi:noNamespaceSchemaLocation="https://www.jetbrains.com/teamcity/schemas/2021.1/project-config.xsd">
  <name>Build Image (from scratch)</name>
  <description>Build Asteroid image and update the sstate-cache</description>
  <settings>
    <options>
      <option name="allowPersonalBuildTriggering" value="false" />
      <option name="cleanBuild" value="true" />
      <option name="maximumNumberOfBuilds" value="1" />
    </options>
    <disabled-settings>
      <setting-ref ref="RUNNER_17" />
      <setting-ref ref="RUNNER_5" />
    </disabled-settings>
    <parameters />
    <build-runners>
      <runner id="RUNNER_2" name="Prepare config files" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[mkdir -p build/conf
echo 'DISTRO = "asteroid"
MACHINE = "%system.MACHINE%"
PACKAGE_CLASSES = "package_ipk"' >> build/conf/local.conf
echo 'BBPATH = "${TOPDIR}"
SRCDIR = "${@os.path.abspath(os.path.join("${TOPDIR}", "../src/"))}"

BBLAYERS = " \
  ${SRCDIR}/meta-qt5 \
  ${SRCDIR}/oe-core/meta \
  ${SRCDIR}/meta-asteroid \
  ${SRCDIR}/meta-openembedded/meta-oe \
  ${SRCDIR}/meta-openembedded/meta-multimedia \
  ${SRCDIR}/meta-openembedded/meta-gnome \
  ${SRCDIR}/meta-openembedded/meta-networking \
  ${SRCDIR}/meta-smartphone/meta-android \
  ${SRCDIR}/meta-openembedded/meta-python \
  ${SRCDIR}/meta-openembedded/meta-filesystems \
  ${SRCDIR}/meta-smartwatch/meta-%system.MACHINE% \
  "' > build/conf/bblayers.conf

# Try to initialize OE environment
source ./src/oe-core/oe-init-build-env]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_3" name="Build Image" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[source src/oe-core/oe-init-build-env > /dev/null
bitbake \
  --ui=teamcity \
  asteroid-image]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_5" name="Backup old cache" type="ssh-exec-runner">
        <parameters>
          <param name="jetbrains.buildServer.deployer.targetUrl" value="%system.sstate.server.upload_address%" />
          <param name="jetbrains.buildServer.deployer.username" value="%system.sstate.server.user%" />
          <param name="jetbrains.buildServer.sshexec.authMethod" value="UPLOADED_KEY" />
          <param name="jetbrains.buildServer.sshexec.command"><![CDATA[mkdir -p /var/www/asteroidos/%system.MACHINE%/archives
cd /var/www/asteroidos/%system.MACHINE%

# Check if there are any files besides the archives
if [ -d sstate-cache ]; then
  tar -c \
    --file="archives/%system.MACHINE%_$(date -I).tar.gz" \
    sstate-cache
  rm -r sstate-cache
fi]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcitySshKey" value="SState server key" />
        </parameters>
      </runner>
      <runner id="RUNNER_17" name="Delete old cache" type="ssh-exec-runner">
        <parameters>
          <param name="jetbrains.buildServer.deployer.targetUrl" value="%system.sstate.server.upload_address%" />
          <param name="jetbrains.buildServer.deployer.username" value="%system.sstate.server.user%" />
          <param name="jetbrains.buildServer.sshexec.authMethod" value="UPLOADED_KEY" />
          <param name="jetbrains.buildServer.sshexec.command" value="rm -r /var/www/asteroidos/%system.MACHINE%" />
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcitySshKey" value="SState server key" />
        </parameters>
      </runner>
      <runner id="RUNNER_18" name="Upload sstate-cache" type="ssh-deploy-runner">
        <parameters>
          <param name="jetbrains.buildServer.deployer.sourcePath"><![CDATA[build/sstate-cache/fedora-35 => other-sstate/sstate-cache/fedora-35
build/sstate-cache/**/*:*:*:*:*::* => other-sstate/sstate-cache
build/sstate-cache/**/*:*:*:*:*:%system.MACHINE%:* => %system.MACHINE%/sstate-cache
build/sstate-cache/**/*:*:*:*:*:%system.architecture%:* => %system.architecture%/sstate-cache
build/sstate-cache/**/*:*:*:*:*:allarch:* => allarch/sstate-cache
build/sstate-cache => sstate-cache]]></param>
          <param name="jetbrains.buildServer.deployer.ssh.transport" value="jetbrains.buildServer.deployer.ssh.transport.scp" />
          <param name="jetbrains.buildServer.deployer.targetUrl" value="%system.sstate.server.upload_address%:/var/www/asteroidos" />
          <param name="jetbrains.buildServer.deployer.username" value="%system.sstate.server.user%" />
          <param name="jetbrains.buildServer.sshexec.authMethod" value="UPLOADED_KEY" />
          <param name="teamcity.step.mode" value="default" />
          <param name="teamcitySshKey" value="SState server key" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Asteroid_HttpsGithubComOpenembeddedOpenembeddedCoreGit">
        <checkout-rule rule="+:.=&gt;src/oe-core" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="Asteroid_HttpsGithubComOpenembeddedBitbakeGit">
        <checkout-rule rule="+:.=&gt;src/oe-core/bitbake" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="Asteroid_HttpsGithubComOpenembeddedMetaOpenembeddedGit">
        <checkout-rule rule="+:.=&gt;src/meta-openembedded" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="Asteroid_Devices_MetaSmatwtach">
        <checkout-rule rule="+:.=&gt;src/meta-smartwatch" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="Asteroid_HttpsGithubComMetaQt5metaQt5">
        <checkout-rule rule="+:.=&gt;src/meta-qt5" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="Asteroid_HttpsGithubComShrDistributionMetaSmartphone">
        <checkout-rule rule="+:.=&gt;src/meta-smartphone" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="Asteroid_HttpsGithubComAsteroidOSMetaAsteroid">
        <checkout-rule rule="+:.=&gt;src/meta-asteroid" />
      </vcs-entry-ref>
    </vcs-settings>
    <requirements />
    <build-triggers>
      <build-trigger id="TRIGGER_6" type="vcsTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="enableQueueOptimization" value="true" />
          <param name="quietPeriodMode" value="USE_DEFAULT" />
          <param name="triggerRules" value="+:root=Asteroid_Devices_MetaSmatwtach;comment=\[Rebuild:%system.MACHINE%\]:**" />
        </parameters>
      </build-trigger>
      <build-trigger id="TRIGGER_7" type="schedulingTrigger">
        <parameters>
          <param name="branchFilter" value="+:*" />
          <param name="cronExpression_dm" value="*" />
          <param name="cronExpression_dw" value="?" />
          <param name="cronExpression_hour" value="*" />
          <param name="cronExpression_min" value="0" />
          <param name="cronExpression_month" value="*" />
          <param name="cronExpression_sec" value="0" />
          <param name="cronExpression_year" value="*" />
          <param name="dayOfWeek" value="Sunday" />
          <param name="enableQueueOptimization" value="true" />
          <param name="hour" value="12" />
          <param name="minute" value="0" />
          <param name="promoteWatchedBuild" value="true" />
          <param name="revisionRule" value="lastFinished" />
          <param name="revisionRuleBuildBranch" value="+:&lt;default&gt;" />
          <param name="schedulingPolicy" value="weekly" />
          <param name="timezone" value="SERVER" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <cleanup />
  </settings>
</template>

